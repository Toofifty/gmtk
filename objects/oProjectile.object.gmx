<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sProjectile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player being attacked
    
ricochet[0] = ricochet1;
ricochet[1] = ricochet3;
arraynum = irandom(1)


// projectile speed
start_speed = 3;

// degrees to move randomly when hitting JAMES
richochet_random = 30;

//  prevent hitting James twice
hit_james = false;

if (distance_to_object(oGam) &lt; distance_to_object(oJames)) {
    move_towards_point(oGam.x, oGam.y, start_speed);
} 
else {
    move_towards_point(oJames.x, oJames.y, start_speed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;


if (place_meeting(x, y, oShield)) {

    direction = oShield.image_angle;
    audio_play_sound(ricochet[arraynum],10,false);
    // inst = instance_place (x, y, oShield);     // &lt;-- Instance it hits
    // n = point_direction(inst.x - 16 * cos(inst.image_angle), inst.y - 16 * sin(inst.image_angle), x, y);                       // &lt;-- direction from instances pov
    // direction = (2 * n) - direction - 180;                                       //&lt;-- new direction
    // get deflect angle
    // direction += oShield.image_angle;
    // direction -= sign(angle_difference(oShield.image_angle, direction)) * (180 - (abs(angle_difference(oShield.image_angle, direction)) * 2));
    // direction = oShield.image_angle + direction + 180;
    // direction = direction * -1 + (90 - oShield.image_angle);
    //direction = oShield.image_angle + angle_difference(oShield.image_angle, direction);
    
} else if (place_meeting(x, y, oJames) &amp;&amp; !oJames.is_down) {
    if (!hit_james) {
        // random angle
        direction = direction - 180 - richochet_random / 2 + random(richochet_random);
        with (oJames) {
            get_hit(5);
        }
        hit_james = true;
    }
    
} else if (place_meeting(x, y, oEntity)) {
    inst = instance_place(x, y, oEntity);
    with (inst) {
        get_hit(10);
    }
    instance_destroy();
    
} else if (place_meeting(x, y, oCollision)) {
    // destroy on wall collision
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
